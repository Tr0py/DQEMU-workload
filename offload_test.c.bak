#include <pthread.h>
#include <stdio.h>
#include <unistd.h>

int count;
pthread_mutex_t mutex;
#define THREAD_NUM 1 
pthread_t tid[THREAD_NUM];
int hugearray[7003];
char haha[]="haha\n";
int another;
FILE* fout;
FILE* fp;

	//pthread_mutex_init(&mutex, NULL);
		//pthread_mutex_lock(&mutex); 
		//pthread_mutex_unlock(&mutex);
void* thread_function(void *arg)
{
	char buf[300];
	hugearray[6999]=200;
	hugearray[7001]=200;
	hugearray[7000]=1;
	while (1)
	//while (hugearray[7000]<1000000)
	{
		//pthread_mutex_lock(&mutex);
	    count++;

		//hugearray[7000]+=hugearray[7000];
		printf("thread: %d\n",count);
		pthread_mutex_unlock(&mutex); 
	}
}

int main()
{pthread_mutex_init(&mutex, NULL);

	count = 0;
	char input[]="biliii\n";
	char buf[100];
	for (int i = 0; i < THREAD_NUM; i++)
	{
		pthread_create(&tid[i], NULL, thread_function, NULL);
		//pthread_join(tid[i], NULL);
	}
	fout=fopen("log_client1.txt","w");	
	hugearray[7000]=10000;
	while (1)
	//while (hugearray[7000]>0)
	{
		pthread_mutex_lock(&mutex); 
		printf("main: %d\n",count);
		//sprintf(buf,"hugearray[7000]: %d\n",hugearray[7000]);
		//fputs(buf,fout);
		//printf("%s",buf);
		//pthread_mutex_unlock(&mutex); 
	}
	fclose(fout);
	
	return 0;
}
